{"version":3,"sources":["serviceWorker.js","card.js","CardList.js","SearchBox.js","Scroll.js","robots.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","CardList","_ref","robots","CardComponent","map","user","i","card","SearchBox","placeholder","onChange","this","searchChange","Component","scroll","style","overflowY","border","height","children","username","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","filteredRobots","filter","toLowerCase","includes","src_SearchBox","Scroll","src_CardList","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.288bc520.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport React from 'react';\r\nconst Card=(props)=>{\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 tc  ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200x200`}/>\r\n        <div>\r\n                    <h2>{props.name}</h2>\r\n                    <p>{props.email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\nconst CardList=({robots})=>{\r\n    const CardComponent=robots.map((user,i)=>{\r\n        return <Card id={robots[i].id} name={robots[i].name} email={robots[i].name}/>\r\n    })\r\n    return(\r\n        <div>\r\n        {CardComponent}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React,{Component} from 'react';\r\nclass SearchBox extends Component{\r\n    render(){\r\n        return(\r\n            <div className='pa2' >\r\n                <input className='pa3 ba b--green bg-lightest-blue' placeholder='search for robots' onChange={this.props.searchChange}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchBox;","import React from 'react';\r\nconst scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'500px'}}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default scroll;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React,{Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport {robots} from './robots';\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:robots,\r\n            searchfield:'',\r\n        }\r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n\r\n        this.setState({searchfield:event.target.value})\r\n\r\n       // this.setState({robots:filteredRobots})\r\n        //console.log(event.target.value);\r\n    }\r\n    render() {\r\n        const filteredRobots=this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        } )\r\n        return (\r\n            < div className='tc'>\r\n            < h1 > RoboFriends < /h1>\r\n            < SearchBox searchChange={this.onSearchChange}  / >\r\n            <Scroll>\r\n                < CardList robots = {filteredRobots}/ >\r\n            </Scroll>\r\n            < /div>\r\n    )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './card.js';\nimport * as serviceWorker from './serviceWorker';\nimport CardList from './CardList.js';\nimport App from './App.js';\nimport 'tachyons';\nimport {robots} from './robots';\n//console.log(robots);\nReactDOM.render(<App robots={robots}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}